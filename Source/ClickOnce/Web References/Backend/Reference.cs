//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace ClickOnce.Backend {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DatabaseSoap", Namespace="http://tempuri.org/")]
    public partial class Database : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetNewBagIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeBagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDuplicateBagIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewBoxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyAbnormalLotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAbnormalLotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatteryGradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPurchaseOrderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyLabelPrintHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlgdw01DatetimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTranslateNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackedBagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeStorageBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorageBillPrintedBagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeInStorageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Database() {
            this.Url = global::ClickOnce.Properties.Settings.Default.ClickOnce_Dev_Backend_Database;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetNewBagIdCompletedEventHandler GetNewBagIdCompleted;
        
        /// <remarks/>
        public event MakeBagCompletedEventHandler MakeBagCompleted;
        
        /// <remarks/>
        public event GetDuplicateBagIdCompletedEventHandler GetDuplicateBagIdCompleted;
        
        /// <remarks/>
        public event GetNewBoxIdCompletedEventHandler GetNewBoxIdCompleted;
        
        /// <remarks/>
        public event MakeBoxCompletedEventHandler MakeBoxCompleted;
        
        /// <remarks/>
        public event ModifyAbnormalLotsCompletedEventHandler ModifyAbnormalLotsCompleted;
        
        /// <remarks/>
        public event GetAbnormalLotsCompletedEventHandler GetAbnormalLotsCompleted;
        
        /// <remarks/>
        public event GetPackingInfoCompletedEventHandler GetPackingInfoCompleted;
        
        /// <remarks/>
        public event GetProductNoCompletedEventHandler GetProductNoCompleted;
        
        /// <remarks/>
        public event GetProductInfoCompletedEventHandler GetProductInfoCompleted;
        
        /// <remarks/>
        public event GetBatteryGradeCompletedEventHandler GetBatteryGradeCompleted;
        
        /// <remarks/>
        public event GetPurchaseOrderInfoCompletedEventHandler GetPurchaseOrderInfoCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetWarehouseInfoCompletedEventHandler GetWarehouseInfoCompleted;
        
        /// <remarks/>
        public event GetDepartmentInfoCompletedEventHandler GetDepartmentInfoCompleted;
        
        /// <remarks/>
        public event ModifyLabelCompletedEventHandler ModifyLabelCompleted;
        
        /// <remarks/>
        public event GetLabelCompletedEventHandler GetLabelCompleted;
        
        /// <remarks/>
        public event ModifyLabelPrintHistoryCompletedEventHandler ModifyLabelPrintHistoryCompleted;
        
        /// <remarks/>
        public event GetPlgdw01DatetimeCompletedEventHandler GetPlgdw01DatetimeCompleted;
        
        /// <remarks/>
        public event GetTranslateNameCompletedEventHandler GetTranslateNameCompleted;
        
        /// <remarks/>
        public event GetPackedBagsCompletedEventHandler GetPackedBagsCompleted;
        
        /// <remarks/>
        public event MakeStorageBillCompletedEventHandler MakeStorageBillCompleted;
        
        /// <remarks/>
        public event GetStorageBillPrintedBagsCompletedEventHandler GetStorageBillPrintedBagsCompleted;
        
        /// <remarks/>
        public event MakeInStorageCompletedEventHandler MakeInStorageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewBagId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetNewBagId(string dateId, string factoryId) {
            object[] results = this.Invoke("GetNewBagId", new object[] {
                        dateId,
                        factoryId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewBagIdAsync(string dateId, string factoryId) {
            this.GetNewBagIdAsync(dateId, factoryId, null);
        }
        
        /// <remarks/>
        public void GetNewBagIdAsync(string dateId, string factoryId, object userState) {
            if ((this.GetNewBagIdOperationCompleted == null)) {
                this.GetNewBagIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewBagIdOperationCompleted);
            }
            this.InvokeAsync("GetNewBagId", new object[] {
                        dateId,
                        factoryId}, this.GetNewBagIdOperationCompleted, userState);
        }
        
        private void OnGetNewBagIdOperationCompleted(object arg) {
            if ((this.GetNewBagIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewBagIdCompleted(this, new GetNewBagIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MakeBag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MakeBag(string[] batteryIds, string batteryGrade, string productNo, string lotId, UserInfo[] userInfo, string warehouseId) {
            object[] results = this.Invoke("MakeBag", new object[] {
                        batteryIds,
                        batteryGrade,
                        productNo,
                        lotId,
                        userInfo,
                        warehouseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakeBagAsync(string[] batteryIds, string batteryGrade, string productNo, string lotId, UserInfo[] userInfo, string warehouseId) {
            this.MakeBagAsync(batteryIds, batteryGrade, productNo, lotId, userInfo, warehouseId, null);
        }
        
        /// <remarks/>
        public void MakeBagAsync(string[] batteryIds, string batteryGrade, string productNo, string lotId, UserInfo[] userInfo, string warehouseId, object userState) {
            if ((this.MakeBagOperationCompleted == null)) {
                this.MakeBagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeBagOperationCompleted);
            }
            this.InvokeAsync("MakeBag", new object[] {
                        batteryIds,
                        batteryGrade,
                        productNo,
                        lotId,
                        userInfo,
                        warehouseId}, this.MakeBagOperationCompleted, userState);
        }
        
        private void OnMakeBagOperationCompleted(object arg) {
            if ((this.MakeBagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeBagCompleted(this, new MakeBagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDuplicateBagId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDuplicateBagId(string batteryId) {
            object[] results = this.Invoke("GetDuplicateBagId", new object[] {
                        batteryId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDuplicateBagIdAsync(string batteryId) {
            this.GetDuplicateBagIdAsync(batteryId, null);
        }
        
        /// <remarks/>
        public void GetDuplicateBagIdAsync(string batteryId, object userState) {
            if ((this.GetDuplicateBagIdOperationCompleted == null)) {
                this.GetDuplicateBagIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDuplicateBagIdOperationCompleted);
            }
            this.InvokeAsync("GetDuplicateBagId", new object[] {
                        batteryId}, this.GetDuplicateBagIdOperationCompleted, userState);
        }
        
        private void OnGetDuplicateBagIdOperationCompleted(object arg) {
            if ((this.GetDuplicateBagIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDuplicateBagIdCompleted(this, new GetDuplicateBagIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewBoxId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetNewBoxId(string customerId, string dateId, string factoryId) {
            object[] results = this.Invoke("GetNewBoxId", new object[] {
                        customerId,
                        dateId,
                        factoryId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewBoxIdAsync(string customerId, string dateId, string factoryId) {
            this.GetNewBoxIdAsync(customerId, dateId, factoryId, null);
        }
        
        /// <remarks/>
        public void GetNewBoxIdAsync(string customerId, string dateId, string factoryId, object userState) {
            if ((this.GetNewBoxIdOperationCompleted == null)) {
                this.GetNewBoxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewBoxIdOperationCompleted);
            }
            this.InvokeAsync("GetNewBoxId", new object[] {
                        customerId,
                        dateId,
                        factoryId}, this.GetNewBoxIdOperationCompleted, userState);
        }
        
        private void OnGetNewBoxIdOperationCompleted(object arg) {
            if ((this.GetNewBoxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewBoxIdCompleted(this, new GetNewBoxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MakeBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MakeBox(string[] batteryIds, string batteryGrade, string productNo, string lotId, UserInfo[] userInfo, string warehouseId) {
            object[] results = this.Invoke("MakeBox", new object[] {
                        batteryIds,
                        batteryGrade,
                        productNo,
                        lotId,
                        userInfo,
                        warehouseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakeBoxAsync(string[] batteryIds, string batteryGrade, string productNo, string lotId, UserInfo[] userInfo, string warehouseId) {
            this.MakeBoxAsync(batteryIds, batteryGrade, productNo, lotId, userInfo, warehouseId, null);
        }
        
        /// <remarks/>
        public void MakeBoxAsync(string[] batteryIds, string batteryGrade, string productNo, string lotId, UserInfo[] userInfo, string warehouseId, object userState) {
            if ((this.MakeBoxOperationCompleted == null)) {
                this.MakeBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeBoxOperationCompleted);
            }
            this.InvokeAsync("MakeBox", new object[] {
                        batteryIds,
                        batteryGrade,
                        productNo,
                        lotId,
                        userInfo,
                        warehouseId}, this.MakeBoxOperationCompleted, userState);
        }
        
        private void OnMakeBoxOperationCompleted(object arg) {
            if ((this.MakeBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeBoxCompleted(this, new MakeBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyAbnormalLots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyAbnormalLots(string[] abnormalLots, int abnormalCode, UserInfo[] userInfo, string isoFormNo, string abnormalCause, string abnormalDispal) {
            this.Invoke("ModifyAbnormalLots", new object[] {
                        abnormalLots,
                        abnormalCode,
                        userInfo,
                        isoFormNo,
                        abnormalCause,
                        abnormalDispal});
        }
        
        /// <remarks/>
        public void ModifyAbnormalLotsAsync(string[] abnormalLots, int abnormalCode, UserInfo[] userInfo, string isoFormNo, string abnormalCause, string abnormalDispal) {
            this.ModifyAbnormalLotsAsync(abnormalLots, abnormalCode, userInfo, isoFormNo, abnormalCause, abnormalDispal, null);
        }
        
        /// <remarks/>
        public void ModifyAbnormalLotsAsync(string[] abnormalLots, int abnormalCode, UserInfo[] userInfo, string isoFormNo, string abnormalCause, string abnormalDispal, object userState) {
            if ((this.ModifyAbnormalLotsOperationCompleted == null)) {
                this.ModifyAbnormalLotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyAbnormalLotsOperationCompleted);
            }
            this.InvokeAsync("ModifyAbnormalLots", new object[] {
                        abnormalLots,
                        abnormalCode,
                        userInfo,
                        isoFormNo,
                        abnormalCause,
                        abnormalDispal}, this.ModifyAbnormalLotsOperationCompleted, userState);
        }
        
        private void OnModifyAbnormalLotsOperationCompleted(object arg) {
            if ((this.ModifyAbnormalLotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyAbnormalLotsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAbnormalLots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AbnormalLot[] GetAbnormalLots() {
            object[] results = this.Invoke("GetAbnormalLots", new object[0]);
            return ((AbnormalLot[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAbnormalLotsAsync() {
            this.GetAbnormalLotsAsync(null);
        }
        
        /// <remarks/>
        public void GetAbnormalLotsAsync(object userState) {
            if ((this.GetAbnormalLotsOperationCompleted == null)) {
                this.GetAbnormalLotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAbnormalLotsOperationCompleted);
            }
            this.InvokeAsync("GetAbnormalLots", new object[0], this.GetAbnormalLotsOperationCompleted, userState);
        }
        
        private void OnGetAbnormalLotsOperationCompleted(object arg) {
            if ((this.GetAbnormalLotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAbnormalLotsCompleted(this, new GetAbnormalLotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPackingInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PackingInfo[] GetPackingInfo(string productNo) {
            object[] results = this.Invoke("GetPackingInfo", new object[] {
                        productNo});
            return ((PackingInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPackingInfoAsync(string productNo) {
            this.GetPackingInfoAsync(productNo, null);
        }
        
        /// <remarks/>
        public void GetPackingInfoAsync(string productNo, object userState) {
            if ((this.GetPackingInfoOperationCompleted == null)) {
                this.GetPackingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackingInfoOperationCompleted);
            }
            this.InvokeAsync("GetPackingInfo", new object[] {
                        productNo}, this.GetPackingInfoOperationCompleted, userState);
        }
        
        private void OnGetPackingInfoOperationCompleted(object arg) {
            if ((this.GetPackingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackingInfoCompleted(this, new GetPackingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProductNo(string moId) {
            object[] results = this.Invoke("GetProductNo", new object[] {
                        moId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductNoAsync(string moId) {
            this.GetProductNoAsync(moId, null);
        }
        
        /// <remarks/>
        public void GetProductNoAsync(string moId, object userState) {
            if ((this.GetProductNoOperationCompleted == null)) {
                this.GetProductNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductNoOperationCompleted);
            }
            this.InvokeAsync("GetProductNo", new object[] {
                        moId}, this.GetProductNoOperationCompleted, userState);
        }
        
        private void OnGetProductNoOperationCompleted(object arg) {
            if ((this.GetProductNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductNoCompleted(this, new GetProductNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductNo[] GetProductInfo(string productNo) {
            object[] results = this.Invoke("GetProductInfo", new object[] {
                        productNo});
            return ((ProductNo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductInfoAsync(string productNo) {
            this.GetProductInfoAsync(productNo, null);
        }
        
        /// <remarks/>
        public void GetProductInfoAsync(string productNo, object userState) {
            if ((this.GetProductInfoOperationCompleted == null)) {
                this.GetProductInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductInfoOperationCompleted);
            }
            this.InvokeAsync("GetProductInfo", new object[] {
                        productNo}, this.GetProductInfoOperationCompleted, userState);
        }
        
        private void OnGetProductInfoOperationCompleted(object arg) {
            if ((this.GetProductInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductInfoCompleted(this, new GetProductInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBatteryGrade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatteryGrade[] GetBatteryGrade(string batteryId) {
            object[] results = this.Invoke("GetBatteryGrade", new object[] {
                        batteryId});
            return ((BatteryGrade[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBatteryGradeAsync(string batteryId) {
            this.GetBatteryGradeAsync(batteryId, null);
        }
        
        /// <remarks/>
        public void GetBatteryGradeAsync(string batteryId, object userState) {
            if ((this.GetBatteryGradeOperationCompleted == null)) {
                this.GetBatteryGradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatteryGradeOperationCompleted);
            }
            this.InvokeAsync("GetBatteryGrade", new object[] {
                        batteryId}, this.GetBatteryGradeOperationCompleted, userState);
        }
        
        private void OnGetBatteryGradeOperationCompleted(object arg) {
            if ((this.GetBatteryGradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatteryGradeCompleted(this, new GetBatteryGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPurchaseOrderInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderNo[] GetPurchaseOrderInfo(string salesOrderNo) {
            object[] results = this.Invoke("GetPurchaseOrderInfo", new object[] {
                        salesOrderNo});
            return ((PurchaseOrderNo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPurchaseOrderInfoAsync(string salesOrderNo) {
            this.GetPurchaseOrderInfoAsync(salesOrderNo, null);
        }
        
        /// <remarks/>
        public void GetPurchaseOrderInfoAsync(string salesOrderNo, object userState) {
            if ((this.GetPurchaseOrderInfoOperationCompleted == null)) {
                this.GetPurchaseOrderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPurchaseOrderInfoOperationCompleted);
            }
            this.InvokeAsync("GetPurchaseOrderInfo", new object[] {
                        salesOrderNo}, this.GetPurchaseOrderInfoOperationCompleted, userState);
        }
        
        private void OnGetPurchaseOrderInfoOperationCompleted(object arg) {
            if ((this.GetPurchaseOrderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPurchaseOrderInfoCompleted(this, new GetPurchaseOrderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetUserInfo(string userId, string password, string factoryId) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        userId,
                        password,
                        factoryId});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string userId, string password, string factoryId) {
            this.GetUserInfoAsync(userId, password, factoryId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string userId, string password, string factoryId, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        userId,
                        password,
                        factoryId}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Warehouse[] GetWarehouseInfo(string moId, string grade) {
            object[] results = this.Invoke("GetWarehouseInfo", new object[] {
                        moId,
                        grade});
            return ((Warehouse[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseInfoAsync(string moId, string grade) {
            this.GetWarehouseInfoAsync(moId, grade, null);
        }
        
        /// <remarks/>
        public void GetWarehouseInfoAsync(string moId, string grade, object userState) {
            if ((this.GetWarehouseInfoOperationCompleted == null)) {
                this.GetWarehouseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseInfoOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseInfo", new object[] {
                        moId,
                        grade}, this.GetWarehouseInfoOperationCompleted, userState);
        }
        
        private void OnGetWarehouseInfoOperationCompleted(object arg) {
            if ((this.GetWarehouseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseInfoCompleted(this, new GetWarehouseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartmentInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DepartmentInfo[] GetDepartmentInfo(string transactionOrderNo) {
            object[] results = this.Invoke("GetDepartmentInfo", new object[] {
                        transactionOrderNo});
            return ((DepartmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentInfoAsync(string transactionOrderNo) {
            this.GetDepartmentInfoAsync(transactionOrderNo, null);
        }
        
        /// <remarks/>
        public void GetDepartmentInfoAsync(string transactionOrderNo, object userState) {
            if ((this.GetDepartmentInfoOperationCompleted == null)) {
                this.GetDepartmentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentInfoOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentInfo", new object[] {
                        transactionOrderNo}, this.GetDepartmentInfoOperationCompleted, userState);
        }
        
        private void OnGetDepartmentInfoOperationCompleted(object arg) {
            if ((this.GetDepartmentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentInfoCompleted(this, new GetDepartmentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyLabel(string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContent) {
            this.Invoke("ModifyLabel", new object[] {
                        fileName,
                        fileContent});
        }
        
        /// <remarks/>
        public void ModifyLabelAsync(string fileName, byte[] fileContent) {
            this.ModifyLabelAsync(fileName, fileContent, null);
        }
        
        /// <remarks/>
        public void ModifyLabelAsync(string fileName, byte[] fileContent, object userState) {
            if ((this.ModifyLabelOperationCompleted == null)) {
                this.ModifyLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyLabelOperationCompleted);
            }
            this.InvokeAsync("ModifyLabel", new object[] {
                        fileName,
                        fileContent}, this.ModifyLabelOperationCompleted, userState);
        }
        
        private void OnModifyLabelOperationCompleted(object arg) {
            if ((this.ModifyLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] GetLabel(string fileName) {
            object[] results = this.Invoke("GetLabel", new object[] {
                        fileName});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetLabelAsync(string fileName) {
            this.GetLabelAsync(fileName, null);
        }
        
        /// <remarks/>
        public void GetLabelAsync(string fileName, object userState) {
            if ((this.GetLabelOperationCompleted == null)) {
                this.GetLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabelOperationCompleted);
            }
            this.InvokeAsync("GetLabel", new object[] {
                        fileName}, this.GetLabelOperationCompleted, userState);
        }
        
        private void OnGetLabelOperationCompleted(object arg) {
            if ((this.GetLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabelCompleted(this, new GetLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyLabelPrintHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyLabelPrintHistory(string fileName, UserInfo[] userInfo, string commandLine) {
            this.Invoke("ModifyLabelPrintHistory", new object[] {
                        fileName,
                        userInfo,
                        commandLine});
        }
        
        /// <remarks/>
        public void ModifyLabelPrintHistoryAsync(string fileName, UserInfo[] userInfo, string commandLine) {
            this.ModifyLabelPrintHistoryAsync(fileName, userInfo, commandLine, null);
        }
        
        /// <remarks/>
        public void ModifyLabelPrintHistoryAsync(string fileName, UserInfo[] userInfo, string commandLine, object userState) {
            if ((this.ModifyLabelPrintHistoryOperationCompleted == null)) {
                this.ModifyLabelPrintHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyLabelPrintHistoryOperationCompleted);
            }
            this.InvokeAsync("ModifyLabelPrintHistory", new object[] {
                        fileName,
                        userInfo,
                        commandLine}, this.ModifyLabelPrintHistoryOperationCompleted, userState);
        }
        
        private void OnModifyLabelPrintHistoryOperationCompleted(object arg) {
            if ((this.ModifyLabelPrintHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyLabelPrintHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlgdw01Datetime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlgdw01Datetime() {
            object[] results = this.Invoke("GetPlgdw01Datetime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlgdw01DatetimeAsync() {
            this.GetPlgdw01DatetimeAsync(null);
        }
        
        /// <remarks/>
        public void GetPlgdw01DatetimeAsync(object userState) {
            if ((this.GetPlgdw01DatetimeOperationCompleted == null)) {
                this.GetPlgdw01DatetimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlgdw01DatetimeOperationCompleted);
            }
            this.InvokeAsync("GetPlgdw01Datetime", new object[0], this.GetPlgdw01DatetimeOperationCompleted, userState);
        }
        
        private void OnGetPlgdw01DatetimeOperationCompleted(object arg) {
            if ((this.GetPlgdw01DatetimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlgdw01DatetimeCompleted(this, new GetPlgdw01DatetimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTranslateName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TranslateName[] GetTranslateName() {
            object[] results = this.Invoke("GetTranslateName", new object[0]);
            return ((TranslateName[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTranslateNameAsync() {
            this.GetTranslateNameAsync(null);
        }
        
        /// <remarks/>
        public void GetTranslateNameAsync(object userState) {
            if ((this.GetTranslateNameOperationCompleted == null)) {
                this.GetTranslateNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTranslateNameOperationCompleted);
            }
            this.InvokeAsync("GetTranslateName", new object[0], this.GetTranslateNameOperationCompleted, userState);
        }
        
        private void OnGetTranslateNameOperationCompleted(object arg) {
            if ((this.GetTranslateNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTranslateNameCompleted(this, new GetTranslateNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPackedBags", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PackedBag[] GetPackedBags() {
            object[] results = this.Invoke("GetPackedBags", new object[0]);
            return ((PackedBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPackedBagsAsync() {
            this.GetPackedBagsAsync(null);
        }
        
        /// <remarks/>
        public void GetPackedBagsAsync(object userState) {
            if ((this.GetPackedBagsOperationCompleted == null)) {
                this.GetPackedBagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackedBagsOperationCompleted);
            }
            this.InvokeAsync("GetPackedBags", new object[0], this.GetPackedBagsOperationCompleted, userState);
        }
        
        private void OnGetPackedBagsOperationCompleted(object arg) {
            if ((this.GetPackedBagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackedBagsCompleted(this, new GetPackedBagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MakeStorageBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MakeStorageBill(string[] bagIds, UserInfo[] userInfo) {
            object[] results = this.Invoke("MakeStorageBill", new object[] {
                        bagIds,
                        userInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakeStorageBillAsync(string[] bagIds, UserInfo[] userInfo) {
            this.MakeStorageBillAsync(bagIds, userInfo, null);
        }
        
        /// <remarks/>
        public void MakeStorageBillAsync(string[] bagIds, UserInfo[] userInfo, object userState) {
            if ((this.MakeStorageBillOperationCompleted == null)) {
                this.MakeStorageBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeStorageBillOperationCompleted);
            }
            this.InvokeAsync("MakeStorageBill", new object[] {
                        bagIds,
                        userInfo}, this.MakeStorageBillOperationCompleted, userState);
        }
        
        private void OnMakeStorageBillOperationCompleted(object arg) {
            if ((this.MakeStorageBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeStorageBillCompleted(this, new MakeStorageBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorageBillPrintedBags", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StorageBillPrintedBag[] GetStorageBillPrintedBags(string storageBillNo) {
            object[] results = this.Invoke("GetStorageBillPrintedBags", new object[] {
                        storageBillNo});
            return ((StorageBillPrintedBag[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStorageBillPrintedBagsAsync(string storageBillNo) {
            this.GetStorageBillPrintedBagsAsync(storageBillNo, null);
        }
        
        /// <remarks/>
        public void GetStorageBillPrintedBagsAsync(string storageBillNo, object userState) {
            if ((this.GetStorageBillPrintedBagsOperationCompleted == null)) {
                this.GetStorageBillPrintedBagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorageBillPrintedBagsOperationCompleted);
            }
            this.InvokeAsync("GetStorageBillPrintedBags", new object[] {
                        storageBillNo}, this.GetStorageBillPrintedBagsOperationCompleted, userState);
        }
        
        private void OnGetStorageBillPrintedBagsOperationCompleted(object arg) {
            if ((this.GetStorageBillPrintedBagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorageBillPrintedBagsCompleted(this, new GetStorageBillPrintedBagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MakeInStorage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MakeInStorage(string storageBillNo, UserInfo[] userInfo) {
            object[] results = this.Invoke("MakeInStorage", new object[] {
                        storageBillNo,
                        userInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakeInStorageAsync(string storageBillNo, UserInfo[] userInfo) {
            this.MakeInStorageAsync(storageBillNo, userInfo, null);
        }
        
        /// <remarks/>
        public void MakeInStorageAsync(string storageBillNo, UserInfo[] userInfo, object userState) {
            if ((this.MakeInStorageOperationCompleted == null)) {
                this.MakeInStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeInStorageOperationCompleted);
            }
            this.InvokeAsync("MakeInStorage", new object[] {
                        storageBillNo,
                        userInfo}, this.MakeInStorageOperationCompleted, userState);
        }
        
        private void OnMakeInStorageOperationCompleted(object arg) {
            if ((this.MakeInStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeInStorageCompleted(this, new MakeInStorageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserInfo {
        
        private string userIdField;
        
        private string userNameField;
        
        private string departmentIdField;
        
        private string departmentNameField;
        
        private string roleNameField;
        
        private string functionIdField;
        
        private string factoryIdField;
        
        private bool canAddField;
        
        private bool canEditField;
        
        private bool canVoidField;
        
        private bool canQueryField;
        
        private bool canExportField;
        
        private bool isAdministratorField;
        
        /// <remarks/>
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string departmentId {
            get {
                return this.departmentIdField;
            }
            set {
                this.departmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string departmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string functionId {
            get {
                return this.functionIdField;
            }
            set {
                this.functionIdField = value;
            }
        }
        
        /// <remarks/>
        public string factoryId {
            get {
                return this.factoryIdField;
            }
            set {
                this.factoryIdField = value;
            }
        }
        
        /// <remarks/>
        public bool canAdd {
            get {
                return this.canAddField;
            }
            set {
                this.canAddField = value;
            }
        }
        
        /// <remarks/>
        public bool canEdit {
            get {
                return this.canEditField;
            }
            set {
                this.canEditField = value;
            }
        }
        
        /// <remarks/>
        public bool canVoid {
            get {
                return this.canVoidField;
            }
            set {
                this.canVoidField = value;
            }
        }
        
        /// <remarks/>
        public bool canQuery {
            get {
                return this.canQueryField;
            }
            set {
                this.canQueryField = value;
            }
        }
        
        /// <remarks/>
        public bool canExport {
            get {
                return this.canExportField;
            }
            set {
                this.canExportField = value;
            }
        }
        
        /// <remarks/>
        public bool isAdministrator {
            get {
                return this.isAdministratorField;
            }
            set {
                this.isAdministratorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StorageBillPrintedBag {
        
        private string productNoField;
        
        private string lotIdField;
        
        private string bagIdField;
        
        private string batteryGradeField;
        
        private int batteryCountField;
        
        /// <remarks/>
        public string productNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string lotId {
            get {
                return this.lotIdField;
            }
            set {
                this.lotIdField = value;
            }
        }
        
        /// <remarks/>
        public string bagId {
            get {
                return this.bagIdField;
            }
            set {
                this.bagIdField = value;
            }
        }
        
        /// <remarks/>
        public string batteryGrade {
            get {
                return this.batteryGradeField;
            }
            set {
                this.batteryGradeField = value;
            }
        }
        
        /// <remarks/>
        public int batteryCount {
            get {
                return this.batteryCountField;
            }
            set {
                this.batteryCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PackedBag {
        
        private string bagIdField;
        
        private string productNoField;
        
        private string modifiedDatetimeField;
        
        private int batteryCountField;
        
        /// <remarks/>
        public string bagId {
            get {
                return this.bagIdField;
            }
            set {
                this.bagIdField = value;
            }
        }
        
        /// <remarks/>
        public string productNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string modifiedDatetime {
            get {
                return this.modifiedDatetimeField;
            }
            set {
                this.modifiedDatetimeField = value;
            }
        }
        
        /// <remarks/>
        public int batteryCount {
            get {
                return this.batteryCountField;
            }
            set {
                this.batteryCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TranslateName {
        
        private string variableNameField;
        
        private string translateNameField;
        
        /// <remarks/>
        public string variableName {
            get {
                return this.variableNameField;
            }
            set {
                this.variableNameField = value;
            }
        }
        
        /// <remarks/>
        public string translateName {
            get {
                return this.translateNameField;
            }
            set {
                this.translateNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DepartmentInfo {
        
        private string departmentIdField;
        
        private string departmentNameField;
        
        /// <remarks/>
        public string departmentId {
            get {
                return this.departmentIdField;
            }
            set {
                this.departmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string departmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Warehouse {
        
        private string warehouseIdField;
        
        private string warehouseNameField;
        
        /// <remarks/>
        public string warehouseId {
            get {
                return this.warehouseIdField;
            }
            set {
                this.warehouseIdField = value;
            }
        }
        
        /// <remarks/>
        public string warehouseName {
            get {
                return this.warehouseNameField;
            }
            set {
                this.warehouseNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PurchaseOrderNo {
        
        private string customerNameField;
        
        private string productNoField;
        
        private string purchaseOrderNoField;
        
        /// <remarks/>
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string productNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string purchaseOrderNo {
            get {
                return this.purchaseOrderNoField;
            }
            set {
                this.purchaseOrderNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BatteryGrade {
        
        private string batteryIdField;
        
        private string gradeField;
        
        /// <remarks/>
        public string batteryId {
            get {
                return this.batteryIdField;
            }
            set {
                this.batteryIdField = value;
            }
        }
        
        /// <remarks/>
        public string grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductNo {
        
        private string productNameField;
        
        private string specField;
        
        /// <remarks/>
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string spec {
            get {
                return this.specField;
            }
            set {
                this.specField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PackingInfo {
        
        private string itemNoField;
        
        private string unitField;
        
        private decimal netWeightField;
        
        private decimal packageCountField;
        
        /// <remarks/>
        public string itemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public decimal netWeight {
            get {
                return this.netWeightField;
            }
            set {
                this.netWeightField = value;
            }
        }
        
        /// <remarks/>
        public decimal packageCount {
            get {
                return this.packageCountField;
            }
            set {
                this.packageCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AbnormalLot {
        
        private string lotIdField;
        
        private int abnormalCodeField;
        
        private string abnormalStatusField;
        
        private string modifiedDatetimeField;
        
        private string userIdField;
        
        private string isoFormNoField;
        
        private string abnormalCauseField;
        
        private string abnormalDisposalField;
        
        /// <remarks/>
        public string lotId {
            get {
                return this.lotIdField;
            }
            set {
                this.lotIdField = value;
            }
        }
        
        /// <remarks/>
        public int abnormalCode {
            get {
                return this.abnormalCodeField;
            }
            set {
                this.abnormalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string abnormalStatus {
            get {
                return this.abnormalStatusField;
            }
            set {
                this.abnormalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string modifiedDatetime {
            get {
                return this.modifiedDatetimeField;
            }
            set {
                this.modifiedDatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string isoFormNo {
            get {
                return this.isoFormNoField;
            }
            set {
                this.isoFormNoField = value;
            }
        }
        
        /// <remarks/>
        public string abnormalCause {
            get {
                return this.abnormalCauseField;
            }
            set {
                this.abnormalCauseField = value;
            }
        }
        
        /// <remarks/>
        public string abnormalDisposal {
            get {
                return this.abnormalDisposalField;
            }
            set {
                this.abnormalDisposalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetNewBagIdCompletedEventHandler(object sender, GetNewBagIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewBagIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewBagIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MakeBagCompletedEventHandler(object sender, MakeBagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeBagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeBagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDuplicateBagIdCompletedEventHandler(object sender, GetDuplicateBagIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDuplicateBagIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDuplicateBagIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetNewBoxIdCompletedEventHandler(object sender, GetNewBoxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MakeBoxCompletedEventHandler(object sender, MakeBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ModifyAbnormalLotsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAbnormalLotsCompletedEventHandler(object sender, GetAbnormalLotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAbnormalLotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAbnormalLotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AbnormalLot[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AbnormalLot[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPackingInfoCompletedEventHandler(object sender, GetPackingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackingInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackingInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetProductNoCompletedEventHandler(object sender, GetProductNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetProductInfoCompletedEventHandler(object sender, GetProductInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductNo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductNo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBatteryGradeCompletedEventHandler(object sender, GetBatteryGradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatteryGradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatteryGradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatteryGrade[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatteryGrade[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPurchaseOrderInfoCompletedEventHandler(object sender, GetPurchaseOrderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPurchaseOrderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPurchaseOrderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderNo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderNo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetWarehouseInfoCompletedEventHandler(object sender, GetWarehouseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Warehouse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Warehouse[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDepartmentInfoCompletedEventHandler(object sender, GetDepartmentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DepartmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DepartmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ModifyLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetLabelCompletedEventHandler(object sender, GetLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ModifyLabelPrintHistoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPlgdw01DatetimeCompletedEventHandler(object sender, GetPlgdw01DatetimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlgdw01DatetimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlgdw01DatetimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTranslateNameCompletedEventHandler(object sender, GetTranslateNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTranslateNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTranslateNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TranslateName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TranslateName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPackedBagsCompletedEventHandler(object sender, GetPackedBagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackedBagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackedBagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackedBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackedBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MakeStorageBillCompletedEventHandler(object sender, MakeStorageBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeStorageBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeStorageBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetStorageBillPrintedBagsCompletedEventHandler(object sender, GetStorageBillPrintedBagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorageBillPrintedBagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorageBillPrintedBagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StorageBillPrintedBag[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StorageBillPrintedBag[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MakeInStorageCompletedEventHandler(object sender, MakeInStorageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeInStorageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeInStorageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591